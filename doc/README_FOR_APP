== Using bundler, getting set up

This is a Rails 3 application, so we require Ruby >=1.8.7 and use Bundler.

REE 2010.02 is the best 1.8.x Ruby to use for Rails 3, so let's get it:

    echo "# Use REE 2010.02" >> ~/.rvm/config/user
    echo "ree_1.8.7_url=http://rubyforge.org/frs/download.php/71096" >> ~/.rvm/config/user
    rvm install ree-1.8.7-2010.02
    rvm use ree-1.8.7-2010.02

Then install bundler, and the GNITE dependencies:

    gem install bundler
    bundle install

== Create your databases

    bundle exec rake db:create db:migrate
    bundle exec rake db:create RAILS_ENV=test
    bundle exec rake db:schema:dump db:test:prepare

== Running the tests

Run the cucumber features and rspec specifications:

    bundle exec rake

We use capybara for cucumber.

== Running the console and server

Since the app uses Rails 3 and bundler, you start the console and server like this:

    bundle exec script/rails console
    bundle exec script/rails server

== Troubleshooting

* If, at some point, you run into an issue building the mysql gem, like this:

    Installing mysql (2.8.1) with native extensions ~/.rvm/rubies/ree-1.8.7-2010.02/lib/ruby/site_ruby/1.8/rubygems/installer.rb:483:
    in `build_extensions': ERROR: Failed to build gem native extension. (Gem::Installer::ExtensionBuildError)

  Then try running:

    bundle config build.mysql --with-mysql-config=/usr/local/mysql/bin/mysql_config

with the appropriate path to mysql_config, and running the command again.

== Deploying to staging

We deploy to Engineyard AppCloud for staging.

Visit the Technical Information writeboard to find the credentials.

You can then deploy via the EY web interface, or with the engineyard gem:

    gem install engineyard
    ey deploy
