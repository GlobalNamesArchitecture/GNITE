<div id="header">
  <% if @master_tree.title == 'New Master Tree' %>
    <input type="text" id="master_tree_title"><span>Enter a title for your newly created tree.</span>
  <% else %>
    <h1><%= @master_tree.title %></h1>
  <% end %>
</div>

<div id="flash-wrapper">
  <%= render :partial => 'shared/flashes' -%>
</div>

<!-- Start of Left Tree -->
<div class="tree-column clearfix">
  <div id="fluid-head"></div>

  <div id="treewrap-left">
    <div class="tree-background">
      <div class="breadcrumbs">
        <ul>
          <li>Breadcrumb</li>
          <li>Breadcrumb</li>
          <li>Breadcrumb</li>
        </ul>
      </div><!-- /.breadcrumbs -->

      <div class="searchbar">
        <div class="grid-button">
          <%= link_to edit_master_tree_path do %>
            Edit Tree Info
          <% end %>
        </div><!-- /.grid-button -->

        <div class="grid-button">
          <%= link_to edit_master_tree_path do %>
            Publish To GNACLR
          <% end %>
        </div><!-- /.grid-button -->

        <div id="add-node">
          <a href="#">Add Node</a>
        </div><!-- /#add-node -->

        <div class="clearfix"></div>
      </div><!-- /.searchbar -->

      <div id="add-node-wrap">
        <div id="tree-container" data-database-id="<%= @master_tree.id %>">
          <div id="master-tree"></div>
        </div>
      </div><!-- /#add-node-wrap -->

          <div class="node-metadata clearfix">
            <h3>Node metadata</h3>

            <div class="metadata-section clearfix">
              <h4><span>Authors</span></h4>
              <ul class="clearfix">
                <li>Content</li>
                <li>Content</li>
                <li>Content</li>
                <li>Content</li>
                <li>Content</li>
              </ul>
            </div>

            <div class="metadata-section clearfix">
              <h4><span>Synonyms</span></h4>
              <ul class="clearfix">
                <li>Content</li>
                <li>Content</li>
                <li>Content</li>
                <li>Content</li>
                <li>Content</li>
              </ul>
            </div>

            <div class="metadata-section clearfix">
              <h4><span>Vernacular names</span></h4>
              <ul class="clearfix">
                <li>Author Name</li>
                <li>Another Name</li>
                <li>Content</li>
              </ul>
            </div>

            <div class="metadata-section clearfix">
              <h4><span>Ranks</span></h4>
              <ul class="clearfix">
                <li>Content</li>
                <li>Content</li>
                <li>Content</li>
                <li>Content</li>
                <li>Content</li>
              </ul>
            </div>
          </div>

    </div><!-- /.tree-background -->
  </div><!-- /#treewrap-left -->
</div>
<!-- End of Left Tree -->

<!-- Start of Right Tree -->
<%= render :partial => "reference_trees" %>
<!-- End of Right Tree -->

<% content_for :javascript do %>
  <%= javascript_include_tag 'jquery.jstree' %>

  <script type="text/javascript" class="source">
    $(document).ready(function() {

          function contextMenuItems() {
            return { // Could be a function that should return an object like this one
              "create" : {
                "separator_before"  : false,
                "separator_after"  : true,
                "label"        : "Create",
                "action"      : function (obj) { this.create(obj); }
              },
              "rename" : {
                "separator_before"  : false,
                "separator_after"  : false,
                "label"        : "Rename",
                "action"      : function (obj) { this.rename(obj); }
              },
              "remove" : {
                "separator_before"  : false,
                "icon"        : false,
                "separator_after"  : true,
                "label"        : "Delete",
                "action"      : function (obj) { this.remove(obj); }
              },
              "cut" : {
                "separator_before"  : false,
                "separator_after"  : false,
                "label"        : "Cut",
                "action"      : function (obj) { this.cut(obj); }
              },
              "paste" : {
                "separator_before"  : false,
                "icon"        : false,
                "separator_after"  : false,
                "label"        : "Paste",
                "action"      : function (obj) { this.paste(obj); }
              }
            }
          }

      $("#add-node").click(function() {
        $("#master-tree").jstree("create");
      });

      $("#master-tree").jstree({
        "json_data": {
          "ajax": {
          "url": "<%= master_tree_nodes_path(:master_tree_id => @master_tree, :format => 'json') %>",
            "data" : function (node) {
              if (node.attr) {
                return { parent_id : node.attr('id').replace('copy_', '') };
              } else {
                return {};
              }
            }
          },
        },
        "contextmenu": {
          select_node: true,
          items : contextMenuItems
        },
        "crrm": {
          "move": {
            "always_copy": "multitree"
          },
        },
        "plugins" : [ "themes", "json_data", "crrm", "ui",  "contextmenu", "dnd"]
        });


      $("#master-tree")
      .bind("create.jstree", function(event, data) {
        var newNode = data.rslt;

        var parentId;
        if (newNode.parent == -1) {
          parentId = null;
        } else {
          parentId = newNode.parent.attr("id");
        }

        $.ajax({
          type: "POST",
          url: "<%= master_tree_nodes_path(:master_tree_id => @master_tree, :format => 'json') %>",
          contentType: "application/json",
          dataType: 'json',
          data: JSON.stringify({node: {name: { name_string : newNode.name }, parent_id: parentId}}),
          success: function(data, textStatus, xhr) {
            newNode.obj.attr("id", data.node.id);
          }
        });
      });

      $("#master-tree").bind("loaded.jstree", function(event, data) {
        $("#master-tree").addClass("loaded");
      });

      $("#master-tree").bind("rename.jstree", function(event, data) {
        var updatedNode = data.rslt;
        $.ajax({
          type: "POST",
          url: "/master_trees/<%= @master_tree.id %>/nodes/"+updatedNode.obj.attr("id")+"/name_updates.json",
          contentType: "application/json",
          dataType: 'json',
          data: JSON.stringify({name: { name_string: updatedNode.new_name } }),
          success: function(data, textStatus, xhr) {
            updatedNode.obj.attr("id", data.node.id);
          }
        });
       });
      $("#master-tree").bind("move_node.jstree", function(event, data) {
         var result = data.rslt;
         var movedNodeId = result.o.attr("id");
         var parentId = result.np.attr("id");
         var isCopy = data.rslt.cy;
         if(parentId == "master-tree"){
           parentId = null;
         }

         if (isCopy) {
           $.ajax({
             type: "POST",
             url: "/master_trees/<%= @master_tree.id %>/nodes/" + movedNodeId + "/clone.json",
             contentType: "application/json",
             dataType: 'json',
             data: JSON.stringify({node: {parent_id: parentId }}),
             success: function(data, textStatus, xhr) {
               result.oc.attr('id', data.node.id);
             }
           });
         } else {
           $.ajax({
             type: "PUT",
             url: "/master_trees/<%= @master_tree.id %>/nodes/"+result.o.attr("id")+".json",
             contentType: "application/json",
             dataType: 'json',
             data: JSON.stringify({node: {parent_id: parentId }}),
             success: function(data, textStatus, xhr) {
               result.o.attr("id", data.node.id);
             }
           });
         }
       });

      $("#master-tree").bind("remove.jstree", function(event, data) {
        var node = data.rslt;
        $.ajax({
          type: "DELETE",
          url: "/master_trees/<%= @master_tree.id %>/nodes/"+node.obj.attr("id")+".json",
          contentType: "application/json",
          dataType: 'json',
        });
      });

    $('#master-tree .jstree-clicked').live('click', function() {
      var wrapper  = $('#add-node-wrap');
      var metadata = $('.node-metadata');

      metadata.show();
      wrapper.css('bottom', $('.node-metadata').height());

      var nodePosition  = $(this)[0].offsetTop - wrapper[0].scrollTop;
      var visibleHeight = wrapper.height();

      if (nodePosition >= visibleHeight) {
        wrapper[0].scrollTop += nodePosition - visibleHeight + 36;
      }
    });

    $('#master-tree .jstree-clicked').live('dblclick', function() {
      $(".jstree-focused").jstree("rename");
    });

      $('.tree-background').live('click', function(event) {
        var hitNode = (event.target.tagName == 'A') ||
                      (event.target.tagName == 'INS');

        if (! hitNode) {
          $(event.target).closest('.jstree').jstree('deselect_all');
          $('.node-metadata').hide();
          $('#add-node-wrap').css('bottom', '20px');
        }
      });

      $('#master_tree_title')
        .focus()
        .blur(function() {
          var self = $(this);

          if ($.trim(self.val()) == '') {
            setTimeout(function() {
              self.focus();
            }, 10);

            self.next().text('Please enter a title for your tree.').addClass('error');
          } else {
            var title = self.val();

            $.post(<%= raw master_tree_path(@master_tree).to_json %>, { 'master_tree[title]' : title, '_method' : 'put' }, function() {
              self
                .next()
                  .remove()
                .end()
                .parent()
                  .append('<h1>' + title + '</h1>')
                .end()
                .remove();
            });
          }
        })
        .keypress(function(event) {
          if (event.which == 13) {
            $(this).blur();
          }
        });
    });
</script>

<% end %>
