<div class="tree-column">
  <div id="treewrap-right">
  <div id="tabs">
    <ul id="tab-titles">
      <li>
        <a href="#new-tab" id="all-tabs">All working trees</a>
        <ul id="working-trees" style="display: block;">
          <li><a href="#1">First tree</a></li>
          <li><a href="#2">Second tree</a></li>
          <li><a href="#3">Third tree</a></li>
          <li><a href="#4">Fourth tree</a></li>
          <li><a href="#5">Fifth tree</a></li>
          <li><a href="#6">Sixth tree</a></li>
        </ul>
      </li>
      <li id="trash"><a href="#trash-tab">Trash</a></li>
      <li id="import"><a href="#import-tab">Import</a></li>
    </ul>

    <!-- Start tab content -->
    <% @master_tree.reference_trees.each do |reference_tree| %>
      <%= render :partial => 'reference_trees/reference_tree', :locals => { :reference_tree => reference_tree } %>
    <% end %>
    <!-- End of reference trees tabs -->
    <div id="new-tab">
        <%= render :template => 'imports/new', :layout => 'layouts/right_tree' %>
    </div>
    <!-- End of tabs-new tab -->
    <div id="trash-tab">
      <div class="tree-background dark">
        <div class="breadcrumbs">
          <ul>
            <li>Trash Bin</li>
          </ul>
        </div>
        <p class="no_content_message">Your Trash Bin is currently Empty.</p>
      </div>
   </div>
   <!-- End of trash tab -->
</div>

<% content_for :javascript do %>
  <script type="text/javascript" class="source">
     $(document).ready(function() {

      $("#import-roots-button").click(function() {
        var imports = $("#import-roots").val().split("\n")
         $.ajax({
           type: "POST",
           url: "<%= reference_trees_path(:format => 'json') %>",
           contentType: "application/json",
           dataType: 'json',
           data: JSON.stringify({reference_tree: {title: "List",
                                                  master_tree_id: <%= @master_tree.id %>},
                                 nodes_list: imports}),
           success: function(data, textStatus, xhr) {
           location.reload();
           }
         });
      });

    <% @master_tree.reference_trees.each do |reference_tree| %>
      $("#<%= dom_id(reference_tree, 'container_for')%>").jstree({
        "json_data": {
          "ajax": {
            "url": "<%= reference_tree_nodes_path(:reference_tree_id => reference_tree.id, :format => 'json') %>",
            "data" : function (node) {
              if (node.attr) {
                return { parent_id : node.attr("id") };
              } else {
                return {};
              }
            }
          },
        },
        "crrm": {
          "move": {
            "check_move": function(move) { return false; },
            "always_copy": "multitree"
          },
        },
        "plugins" : [ "themes", "json_data", "ui", "dnd", "crrm"]

      });
    <% end %>

    });
  </script>
<% end %>
