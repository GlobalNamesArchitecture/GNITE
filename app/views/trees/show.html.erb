<!-- Start of Left Tree -->
<div class="tree-column">
  <div class="treewrap">
    <div class="tree-nav">
      <ul>
        <!--
        <li><a href="#">New Master Tree</a></li>
        -->
        <li><a href="#" id="new-node-button">New Node</a></li>
      </ul>
    </div>
    <div class="tree-background">
      <div class="breadcrumbs">
        <!--
        <ul>
          <li>Kingdom</li>
          <li>Phylum</li>
          <li>Class</li>
          <li>Order</li>
          <li>Family</li>
        </ul>
        -->
      </div>
      <!--
      <div class="searchbar">
        <div class="grid-button">
          <a href="#"><img class="icon" src="/images/metadata-author.png"/>Author</a>
        </div>
        <div class="grid-button">
          <a href="#"><img class="icon" src="/images/gridview.png"/>Grid view</a>
        </div>
        <form method="get" id="searchform" action="">
          <fieldset>
            <input type="text" value="Search this tree" name="search" id="search" onclick="this.value='';this.onclick=null;" />
          </fieldset>
        </form>
        <div class="clearfix"></div>
      </div>
      -->

      <div id="tree-container">
        <div id="master-tree"></div>
      </div>
    </div>
  </div>
</div>
<!-- End of Left Tree -->
<!-- Start of Right Tree -->
<!--
<div class="tree-column">
  <div class="treewrap">
    <div class="tree-nav">
      <ul>

      </ul>
    </div>
    <div class="tree">
      <div class="breadcrumbs">
        <p></p>
      </div>
      <div class="searchbar">
        <div class="grid-button">

        </div>

        <div class="clearfix"></div>
      </div>
    </div>
  </div>
</div>
-->
<!-- End of Right Tree -->

<% content_for :javascript do %>
  <%= javascript_include_tag 'jquery.jstree' %>

  <script type="text/javascript" class="source">
    $(document).ready(function() {

      $("#new-node-button").click(function() {
        $("#master-tree").jstree("create");
      });

      $("#master-tree").jstree({
        "json_data": {
          "ajax": {
          "url": "<%= tree_nodes_path(:tree_id => @tree, :format => 'json') %>",
            "data" : function (node) {
              if (node.attr) {
                return { parent_id : node.attr("id") };
              } else {
                return {};
              }
            }
          },
        },
        "plugins" : [ "themes", "json_data", "crrm", "ui",  "contextmenu", "dnd"]
        });


      $("#master-tree")
      .bind("create.jstree", function(event, data) {
        var newNode = data.rslt;

        var parentId;
        if (newNode.parent == -1) {
          parentId = null;
        } else {
          parentId = newNode.parent.attr("id");
        }

        $.ajax({
          type: "POST",
          url: "<%= tree_nodes_path(:tree_id => @tree, :format => 'json') %>",
          contentType: "application/json",
          dataType: 'json',
          data: JSON.stringify({node: {name: newNode.name, parent_id: parentId}}),
          success: function(data, textStatus, xhr) {
            newNode.obj.attr("id", data.node.id);
          }
        });
      });
     $("#master-tree").bind("loaded.jstree", function(event, data) {
        $("#master-tree").addClass("loaded");
       })

      $("#master-tree").bind("rename.jstree", function(event, data) {
        var updatedNode = data.rslt;
        $.ajax({
          type: "PUT",
          url: "/trees/<%= @tree.id %>/nodes/"+updatedNode.obj.attr("id")+".json",
          contentType: "application/json",
          dataType: 'json',
          data: JSON.stringify({node: {name: updatedNode.new_name }}),
          success: function(data, textStatus, xhr) {
            updatedNode.obj.attr("id", data.node.id);
          }
        });
       });
      $("#master-tree").bind("move_node.jstree", function(event, data) {
          var updatedNodes = data.rslt;
          var parent_id = updatedNodes.np.attr("id");
          if(parent_id == "master-tree"){
            parent_id = null;
          }
         $.ajax({
          type: "PUT",
          url: "/trees/<%= @tree.id %>/nodes/"+updatedNodes.o.attr("id")+".json",
          contentType: "application/json",
          dataType: 'json',
          data: JSON.stringify({node: {parent_id: parent_id }}),
          success: function(data, textStatus, xhr) {
            updatedNodes.o.attr("id", data.node.id);
          }
        });
       });

      $("#master-tree").bind("remove.jstree", function(event, data) {
        var node = data.rslt;
        $.ajax({
          type: "DELETE",
          url: "/trees/<%= @tree.id %>/nodes/"+node.obj.attr("id")+".json",
          contentType: "application/json",
          dataType: 'json',
        });
      });

     $('.jstree-clicked').live('dblclick', function() { $(".jstree-focused").jstree("rename"); });

      $('.tree-background').live('click', function(event) {
        var hitNode = (event.target.tagName == 'A') ||
                      (event.target.tagName == 'INS');

        if (! hitNode) {
          $(event.target).closest('.jstree').jstree('deselect_all');
        }
      });

      $('.tree-background').live('click', function(event) {
        $(event.target).find('.jstree').jstree('deselect_all');
      });
    });
</script>
<% end %>
